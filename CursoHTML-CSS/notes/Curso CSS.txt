--- CSS ---

-A sigla CSS significa Cascading Style Sheets, e elas são as responsáveis pelo estilo das páginas, ou seja, a aparência
-Temos 3 maneiras de implementar CSS em um projeto: Inline style, Internal style e External style
-Todas as declarações feitas em CSS devem ser separadas e terminar em ;

--- INLINE STYLE ---

-Este formato é utilizado para alterar especificamente todos os itens dentro de uma tag específica e ele é implementado como parâmetro dentro da própria tag.

Exemplo: 
	<body style="background-color: lightskyblue; font-family: Arial, Helvetica, sans-serif; font-size: 20px;">
    		<h1 style="color: mediumblue; background-color: dodgerblue; font-size: 1.5em;">Capítulo 1</h1>
    		<h2 style="color: darkred; font-size: 1.2em;">Capítulo 1.1</h2>
    		<p style="text-align: justify;">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Aspernatur velit quae aut perferendis assumenda molestiae enim rerum 			atque, 	consectetur quod, deleniti neque vero dicta tenetur illum vel officiis dolorem vitae.</p>
    		<h2 style="color: darkred; font-size: 1.2em;">Capítulo 1.2</h2>
   	 	<p style="text-align: justify;">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Accusantium, rerum obcaecati soluta possimus magnam iusto autem 			similique accusamus at eius excepturi facere incidunt molestias harum ipsa ab voluptates natus itaque.</p>
    		<h1 style="color: mediumblue; font-size: 1.5em; background-color: dodgerblue;">Capítulo 2</h1>
    		<h2 style="color: darkred; font-size: 1.2em;">Capítulo 2.1</h2>
    		<p style="text-align: justify;">Lorem ipsum dolor sit amet consectetur adipisicing elit. Ullam debitis iste illo nam, quis, molestias voluptates cumque animi 			quod dolorum, distinctio impedit nostrum deleniti aliquam dolores asperiores magnam sequi totam?</p>
	</body>

-O Inline style é utilizado para casos muito isolados onde é necessário fazer uma mudança pontual em uma tag específica e não deve ser utilizado para todo o estilo da página, por questões de praticidade, por exemplo: Em caso de manutenção ou mudança de estilo a pedido do cliente será consumido muito tempo até alterar tudo

--- INTERNAL STYLE ---

-Para aplicar estilos desta maneira, adicionamos uma tag <style></style> dentro da tag <head></head> e colocamos ali as declarações de CSS. Podem ser alteradas todas as tags de um tipo específico, por exemplo, todos os <h1>, todos os <p> ou o <body> por completo

Exemplo:
	<head>
    		<meta charset="UTF-8">
    		<meta name="viewport" content="width=device-width, initial-scale=1.0">
    		<title>Estilos Locais / Internos</title>
    		<style>
        		body {
            		background-color: lightskyblue;
            		font-family: Arial, Helvetica, sans-serif;
            		font-size: 20px;
        		}

        		h1 {
            		color: darkblue;
            		background-color: dodgerblue;
        		}

        		h2 {
            		color: darkred;
        		}

        		p {
            		text-align: justify;
        		}
    		</style>
	</head>

-Por mais que os Internal style alterem todas as tags de um tipo ao mesmo tempo, caso haja uma aplicação Inline em uma tag específica ela vai prevalecer sobre o Internal

--- EXTERNAL STYLE ---

-A maneira mais versátil e organizada de implementar CSS é com o External style, onde criamos um arquivo .CSS fora do arquivo .HTML e adicionamos todas as declarações, após isso importamos o arquivo por meio da tag <link rel="stylesheet" href="nomedoarquivo.css"> dentro da tag <head> para a página e aplicamos os estilos

Exemplo:
	
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Estilos Externos</title>
    <link rel="stylesheet" href="style.css">
</head>

************* Arquivo .CSS fora do arquivo .HTML: *************
		@charset "UTF-8";
	
	body {
	    background-color: lightskyblue;
	    font-family: Arial, Helvetica, sans-serif;
	    font-size: 20px;
	}

	h1 {
    	color: darkblue;
    	background-color: dodgerblue;
	}

	h2 {
    	color: darkred;
	}

	p {
    	text-align: justify;
	}


--- CORES ---

-A cor azul é a cor com menor % de rejeição entre todas as cores, sendo considerada uma cor segura para trabalhar em designs
-Cada cor é associada a algum segmento/ambiente/sensação (checar tabela de cores no pdf nº13 - https://github.com/gustavoguanabara/html-css/blob/master/aulas-pdf/13%20-%20Cores.pdf)
-Fundos escuros com letras brancas (normalmente preto com branco) devem ser utilizados em páginas com pouco conteúdo para ser lido, por exemplo a página inicial da Netflix.com, que ao mudar para páginas que contenham mais texto e informações, as cores se invertem para fundo branco e letras pretas.
-Dentro da teoria das cores, usamos como base o círculo cromático, que organiza as cores em grupos que facilitam o trabalho
-As 3 cores em destaque são as cores primárias - Amarelo, Vermelho, Azul
-Da junção de 2 cores primárias temos as cores secundárias - Laranja, Violeta/Roxo, Verde
-Da junção de uma cor primária e uma cor secundária temos as 6 cores terciárias - Amarelo-esverdeado (amarelo+verde), Amarelo-alaranjado (amarelo+laranja), Vermelho-alaranjado (vermelho+laranja), Vermelho-arroxeado (vermelho+roxo), Azul-arroxeado (azul+roxo), Azul-esverdeado (azul+verde)
-Ao dividirmos o círculo cromático ao meio, temos as cores frias (lado do azul, verde, roxo etc) e as cores quentes (lado do amarelo, laranja, vermelho, etc)
-Uma paleta de cores normalmente tem entre 3 a 5 cores, mas isso não é uma regra fixa, existindo a possibilidade de trabalhar com diferentes tons de uma única cor, ou adicionar alguma cor a mais
-Caso o cliente do projeto tenha uma logo da empresa, ela deve ser importante para a montagem da paleta
-As CORES COMPLEMENTARES são as cores completamente opostas no círculo cromático, ao fazer uma ligação em linha reta de um lado ao outro do círculo podemos achar as cores complementares de cada cor
-As CORES ANÁLOGAS são as cores ao lado da cor escolhida como referência (esquerda e direita) e são cores que apresentam um contraste muito pequeno por se encontrarem vizinhas no círculo
-Uma possibilidade de paleta de cores é utilizar das cores análogas e de uma cor complementar em conjunto, criando uma paleta com harmonia e com possibilidade de contraste
-As CORES ANÁLOGAS RELACIONADAS funcionam da seguinte maneira: selecionamos 2 cores vizinhas, ignoramos uma cor imediatamente ao lado e pegamos a próxima, formando uma paleta de 2 cores semelhantes e 1 cor com contraste leve
-As CORES INTERCALADAS são uma possibilidade de paleta que pega 1 cor, ignora as 2 cores vizinhas e pega as 2 próximas cores, formando uma paleta com contraste entre todas as cores
-As CORES TRIÁDICAS são representadas por triângulos, pegamos uma cor, pulamos 3 cores, pegamos a próxima e repetimos o processo para fechar um triângulo perfeito
-As CORES EM QUADRADO funcionam de maneira semelhante às triádicas, porém pulamos 2 cores ao invés de 3, até formarmos um quadrado
-As CORES TETRÁDICAS são formadas da seguinte forma: escolhemos uma cor e seu extremo oposto, depois escolhemos uma segunda cor e seu extremo oposto também, assim formando uma paleta de 4 cores
-A MONOCROMIA utiliza de apenas uma cor e vai trabalhando a saturação e o brilho dessa cor para gerar outros tons


--- REPRESENTAR CORES DENTRO DO CSS ---

-Para representar cores dentro do CSS temos as seguintes opções:

*Nome - digitar o nome da cor (é bem limitado em possibilidades de cores) exemplo: blue;
*Código Hexadecimal - utilizando o código de 6 dígitos formado por algarismos hexadecimais (0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F) exemplo: #0000ff;
*RGB (Red, Green, Blue) - utiliza os valores de vermelho, verde e azul usados para formar a cor específica. Exemplo: rgb(0,0,255);
*HSL (Hue, Saturation, Luminosity) - utiliza os valores de matiz, saturação e luminosidade. Exemplo: hsl(240, 100%, 50%);
-O próprio VsCode possui uma ferramenta para facilitar a seleção de cores, ao passar o mouse em cima de uma cor que esteja no código, uma janela se abre com um seletor de cores e ao clicar no título ele converte para todos os 3 tipos de códigos (rgb, hsl e hexadecimal)

OBS: todos os exemplos são formas diferentes de representar a mesma cor (azul)

--- CRIAR PALETAS DE CORES ---

-Sites úteis para criação de paletas de cores:

*color.adobe.com - contém diversas ferramentas para auxílio de criação de paletas de forma gratuita, fornece os códigos de todas as cores e também conta com função de extração de cores de imagens prontas para utilização em outros projetos e criação de degradês

*paletton.com - contém ferramentas para criação de paletas e possui a função de simulação de uso da paleta em uma página exemplo

*coolors.co - contém um criador de paletas útil para quem está precisando de alguma ideia inicial

*Extensão Colorzilla - permite extrair cores de páginas da web apenas passando o cursor em cima delas

--- EXTRAIR CORES DE IMAGENS ---

-Para extração de cores usando o gimp: tirar print ou salvar a imagem que contém a cor, usar a ferramenta de conta gotas e clicar sobre a cor desejada, após isso ao clicar no quadrado que extraiu a cor, uma janela com todas as informações sobre esta cor vai se abrir
-Para extração de cores de páginas da web usando a extensão Colorzilla: informa em tempo real as cores conforme o usuário passa o cursor por cima da cor na página da web

--- CRIANDO DEGRADÊ ---

-Para criar um degradê no CSS utilizamos o comando: backgound-image: linear-gradiente(); - dentro dos parênteses devemos informar se ele é da esquerda para direita (to right), da direita para a esquerda (to left), para cima (to top) ou para baixo (to bottom) ou se possui algum ângulo específico que o degradê deve se comportar (90deg) e as cores separadas por vírgulas. Podemos também incluir uma porcentagem ao lado de cada cor para determinar o espaço ocupado por ela no degradê. Exemplo:

<head>
     <style>        
        body {
            background-image: linear-gradient(to right, #3198E2 10%, #6D59C0, #B93590, #E33F5F, #FDD579);
            background-attachment: fixed;
        }
    </style>
</head>

-Para a criação de uma configuração global para as CSS usamos o seguinte comando:

* {
            height: 100%;
        }

-Para fixar o degradê no fundo da tela e evitar que ele mexa com a barra de rolagem usamos o seguinte comando:

background-attachment: fixed;

-Para tornar um degradê em formato radial (circular) usamos o comando:

background-image: radial-gradient(circle);

--- CSS ---

-Declarações úteis de CSS com exemplos:

*background-color: #ffffff; - determina a cor de fundo
*border-radius: 10px; - determina o arredondamento das pontas do item selecionado
*box-shadow: 5px 5px 15px rgba(12,12,12, 0.500); - cria uma sombra ao redor do item escolhido e determina seu tamanho e cores
*width: 500px; - determina a largura do item selecionado
*height: 500px; - determina a altura do item selecionado
*padding: 10px; - determina o espaçamento das bordas do quadro
*margin: auto; - faz com que o item selecionado permaneça ao centro da tela mesmo quando alterado o tamanho da janela do navegador
*text-align: justify; - faz com que o texto dentro do item selecionado fique compacto e alinhado
*color: #ffffff; - determina a cor do item selecionado (no caso de um <h1>,<h2>,<p>,etc vai alterar a cor das letras deles)
*background-image: linear-gradiente(to right, #ffffff, #ffffff); - cria um degradê ao fundo da tela, determina o sentido ou ângulo que ele vai se desenvolver e escolhe a transição de cores que será feita
*font-family: Arial, Helvetica, sans-serif; - determina a fonte do item selecionado (pode ser usado nas configurações globais para alterar a página toda)

--- FONTES ---

-











